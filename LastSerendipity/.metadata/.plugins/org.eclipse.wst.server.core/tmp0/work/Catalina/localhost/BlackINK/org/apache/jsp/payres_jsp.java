/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-10-04 20:21:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class payres_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

      out.write('\n');

	response.setContentType("text/html; charset=UTF-8");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-latest.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("\tsrc=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.ajax-cross-origin.min.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\n");
      out.write("\t$(function() {\n");
      out.write("\t\t\n");
      out.write("\t\tconsole.log(\"js 시작\");\n");
      out.write("\n");
      out.write("\t\tvar IMP = window.IMP;\n");
      out.write("\t\tIMP.init('imp89798577');\n");
      out.write("\n");
      out.write("\t\tvar ti_no, me_no, ti_pay, hi_method, ti_title, hi_email;\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\tti_no = document.getElementById(\"ti_no\").value;\t// 글 번호 => 주문 번호\n");
      out.write("\t\tme_no = document.getElementById(\"me_no\").value;\t// 회원 번호\n");
      out.write("\t\tti_pay = document.getElementById(\"hi_pay\").value;\t// 결제 금액\n");
      out.write("\t\tpay = (ti_pay * 0.1);\n");
      out.write("\t\thi_method = document.getElementById(\"hi_method\").value;\t// 결제 방법 \n");
      out.write("\t\tti_title = document.getElementById(\"ti_title\").value;\t// 주문 명\n");
      out.write("\t\thi_email = document.getElementById(\"hi_email\").value;\t// 주문자 이메일\n");
      out.write("\n");
      out.write("\t\tIMP.request_pay({\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tpg : \"html5_inicis\",\n");
      out.write("\t\t\tpay_method : hi_method,\n");
      out.write("\t\t\tmerchant_uid : ti_no,\n");
      out.write("\t\t\tname : ti_title,\n");
      out.write("\t\t\tamount : pay,\n");
      out.write("\t\t\tbuyer_email : hi_email,\n");
      out.write("\t\t\tbuyer_name : me_no\n");
      out.write("\t\t\t\n");
      out.write("\t\t}, function(rsp) {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rsp.success) {\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tconsole.log(\"ajax 1번 시작\");\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar sendData = {\n");
      out.write("\t\t\t\t\t\t\"pay_method\" : hi_method,\t// 결제 방법\n");
      out.write("\t\t\t\t\t\t\"merchant_uid\" : ti_no,\t// 주문 번호\n");
      out.write("\t\t\t\t\t\t\"real_amount\" : pay,\t// 결제 금액\n");
      out.write("\t\t\t\t\t\t\"member_no\" : me_no,\t// 회원 번호\n");
      out.write("\t\t\t\t\t\t\"imp_uid\" : rsp.imp_uid\t// 결제 번호\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tconsole.log(JSON.stringify(sendData));\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$.ajax({\t\t\t// 가맹점 db에 정보 저장\n");
      out.write("\n");
      out.write("\t\t\t\t\turl : \"hispay\",\n");
      out.write("\t\t\t\t\tmethod : \"post\",\n");
      out.write("\t\t\t\t\tdata : {\n");
      out.write("\t\t\t\t\t\t\"command\": \"save\",\n");
      out.write("\t\t\t\t\t\t\"sendData\" : JSON.stringify(sendData)\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(result){\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tvar msg = '결제가 완료되었습니다.';\n");
      out.write("\t\t\t\t        msg += '고유ID : ' + rsp.imp_uid;\n");
      out.write("\t\t\t\t        msg += '상점 거래ID : ' + rsp.merchant_uid;\n");
      out.write("\t\t\t\t        msg += '결제 금액 : ' + rsp.paid_amount;\n");
      out.write("\t\t\t\t        msg += '카드 승인번호 : ' + rsp.apply_num;\n");
      out.write("\t\t\t\t        alert(msg);\n");
      out.write("\t\t\t\t        \n");
      out.write("\t\t\t\t        location.href=\"uCalController.do?command=selectMyList\";\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar msg = '결제에 실패하였습니다.';\n");
      out.write("\t\t\t\tmsg += '에러내용 : ' + rsp.error_msg;\n");
      out.write("\t\t\t\talert(msg);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tlocation.href=\"uCalController.do?command=selectMyList\";\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<!-- \n");
      out.write("\n");
      out.write("\ttattooinfo 테이블에서 받을 것\n");
      out.write("\t\t: 시술 번호, 회원 번호, 시술 명, 시술 금액, 결제 방식\n");
      out.write("\n");
      out.write(" -->\n");
      out.write("\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.ti_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"ti_no\" />\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.me_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"me_no\" />\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.ti_pay}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"hi_pay\" />\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.hi_method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"hi_method\" />\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.ti_title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"ti_title\" />\n");
      out.write("\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.hi_email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"hi_email\" />\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
